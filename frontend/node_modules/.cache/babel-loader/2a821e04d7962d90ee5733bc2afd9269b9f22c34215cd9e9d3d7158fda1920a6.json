{"ast":null,"code":"import axios from\"axios\";import{useEffect,useState}from\"react\";import Papa from'papaparse';import{Link}from\"react-router-dom\";import{toast,ToastContainer}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Users=()=>{const[users,setUsers]=useState([]);const[loading,setLoading]=useState(true);const[selectedFile,setSelectedFile]=useState(null);// State to hold the selected file\nconst[currentPage,setCurrentPage]=useState(1);const usersPerPage=5;// Set how many users you want to display per page\nuseEffect(()=>{setLoading(true);axios.get('https://merncrudbackend-dvjr.onrender.com').then(result=>{setUsers(result.data);setLoading(false);}).catch(err=>{console.log(err);setLoading(false);});},[]);const handleDelete=id=>{axios.delete(`https://merncrudbackend-dvjr.onrender.com/deleteUser/${id}`).then(res=>{setUsers(prevUsers=>{const updatedUsers=prevUsers.filter(user=>user._id!==id);// Check if the current page has no users left\nif(updatedUsers.length===0&&currentPage>1){setCurrentPage(currentPage-1);// Go to the previous page\n}return updatedUsers;});// Update state after deletion\nsetUsers(prevUsers=>prevUsers.filter(user=>user._id!==id));toast.success(\"User deleted successfully!\",{autoClose:1000// Set to 1000 ms (1 second)\n});}).catch(err=>{toast.error(\"Failed to delete user.\");// console.error('Error deleting user:', err);\n});};const handleExport=async()=>{try{const response=await axios.get('https://merncrudbackend-dvjr.onrender.com/api/exportUsers',{responseType:'blob'// Important for downloading files\n});const url=window.URL.createObjectURL(new Blob([response.data]));const link=document.createElement('a');link.href=url;link.setAttribute('download','export.csv');document.body.appendChild(link);link.click();link.remove();toast.success(\"Data exported successfully!\",{autoClose:1000});}catch(error){toast.error(\"Failed to export data.\");// console.error('Error exporting data', error);\n}};const handleImport=async file=>{const formData=new FormData();formData.append('file',file);try{const response=await fetch('https://merncrudbackend-dvjr.onrender.com/api/importCsv',{method:'POST',body:formData});if(!response.ok){throw new Error('Error importing CSV: '+response.statusText);}const data=await response.text();toast.success(\"Data imported successfully!\",{autoClose:1000});// console.log('Import success:', data); // Log response for debugging\nreturn data;// Return a success message or the data\n}catch(error){toast.error(\"Failed to import data.\");// console.error('Import error:', error.message);\nthrow error;// Re-throw for handling\n}};const handleFileChange=event=>{const file=event.target.files[0];if(file){const fileExtension=file.name.split('.').pop().toLowerCase();// Get file extension\nif(fileExtension==='csv'){setSelectedFile(file);}else{setSelectedFile(null);// Reset the selected file\ntoast.error(\"Invalid file type! Please select a valid CSV file.\",{autoClose:1000// Auto close after 2 seconds\n});}}};const handleFileUpload=e=>{e.preventDefault();if(selectedFile){Papa.parse(selectedFile,{header:true,skipEmptyLines:true,// This option will skip empty lines in the CSV\ncomplete:function(results){const rows=results.data;// Check if CSV has no rows or only one row which is empty\nif(rows.length===0||rows.every(row=>Object.values(row).every(value=>value===\"\"))){toast.error(\"Please enter the correct file, not empty.\",{autoClose:2000// Auto close after 2 seconds\n});return;// Stop the import process\n}// If valid, proceed with the import\nhandleImport(selectedFile).then(()=>{// Fetch updated users after import\naxios.get('https://merncrudbackend-dvjr.onrender.com').then(response=>{setUsers(response.data);// Update state with the latest users\nsetSelectedFile(null);document.getElementById('csvFileInput').value='';// Reset the file input element\n}).catch(err=>{console.error('Error fetching updated user list:',err);});}).catch(error=>{console.error('Import error:',error);});},error:function(error){console.error('Error parsing CSV:',error);}});}else{toast.error(\"No file selected. Please select a valid file.\",{autoClose:2000});}};const indexOfLastUser=currentPage*usersPerPage;// Get index of the last user\nconst indexOfFirstUser=indexOfLastUser-usersPerPage;// Get index of the first user\nconst currentUsers=users.slice(indexOfFirstUser,indexOfLastUser);// Get current users\nconst totalPages=Math.ceil(users.length/usersPerPage);// Total number of pages\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex vh-100 bg-primary justify-content-center align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-50 bg-white rounded p-3\",children:[/*#__PURE__*/_jsx(Link,{to:\"/create\",className:\"btn btn-success\",children:\"Add +\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary m-2\",onClick:handleExport,children:\"Export CSV\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"m-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"csvFileInput\",accept:\".csv\",className:\"m-2\",onChange:handleFileChange}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-warning\",onClick:handleFileUpload,children:\"Import CSV\"})]}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})}):users.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"No\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Age\"}),/*#__PURE__*/_jsx(\"th\",{style:{textAlign:\"center\"},children:\"Action\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:currentUsers.map((user,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:indexOfFirstUser+index+1}),/*#__PURE__*/_jsx(\"td\",{children:user.name}),/*#__PURE__*/_jsx(\"td\",{children:user.email}),/*#__PURE__*/_jsx(\"td\",{children:user.age}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(Link,{to:`/update/${user._id}`,className:\"btn btn-success m-2\",children:\"Update\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:()=>handleDelete(user._id),children:\"Delete\"})]})]},user._id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(prev=>Math.max(prev-1,1)),disabled:currentPage===1// className=\"btn btn-secondary\"\n,className:\"btn btn-primary\",children:\"Previous\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Page \",currentPage,\" of \",totalPages]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(prev=>prev+1),disabled:currentUsers.length<usersPerPage// className=\"btn btn-secondary\"\n,className:\"btn btn-success\",children:\"Next\"})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"No records found\"})})]}),/*#__PURE__*/_jsx(ToastContainer,{})]});};export default Users;","map":{"version":3,"names":["axios","useEffect","useState","Papa","Link","toast","ToastContainer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Users","users","setUsers","loading","setLoading","selectedFile","setSelectedFile","currentPage","setCurrentPage","usersPerPage","get","then","result","data","catch","err","console","log","handleDelete","id","delete","res","prevUsers","updatedUsers","filter","user","_id","length","success","autoClose","error","handleExport","response","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","handleImport","file","formData","FormData","append","fetch","method","ok","Error","statusText","text","handleFileChange","event","target","files","fileExtension","name","split","pop","toLowerCase","handleFileUpload","e","preventDefault","parse","header","skipEmptyLines","complete","results","rows","every","row","Object","values","value","getElementById","indexOfLastUser","indexOfFirstUser","currentUsers","slice","totalPages","Math","ceil","className","children","to","onClick","type","accept","onChange","role","style","textAlign","map","index","email","age","prev","max","disabled"],"sources":["E:/PROJECTS/Mern-Crud-Op/frontend/src/components/Users.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Papa from 'papaparse';\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Users = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedFile, setSelectedFile] = useState(null); // State to hold the selected file\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const usersPerPage = 5; // Set how many users you want to display per page\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios.get('https://merncrudbackend-dvjr.onrender.com')\r\n            .then(result => {\r\n                setUsers(result.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    const handleDelete = (id) => {\r\n        axios.delete(`https://merncrudbackend-dvjr.onrender.com/deleteUser/${id}`)\r\n            .then(res => {\r\n                setUsers(prevUsers => {\r\n                    const updatedUsers = prevUsers.filter(user => user._id !== id);\r\n\r\n                    // Check if the current page has no users left\r\n                    if (updatedUsers.length === 0 && currentPage > 1) {\r\n                        setCurrentPage(currentPage - 1); // Go to the previous page\r\n                    }\r\n                    return updatedUsers;\r\n                });\r\n                // Update state after deletion\r\n                setUsers(prevUsers => prevUsers.filter(user => user._id !== id));\r\n                toast.success(\"User deleted successfully!\", {\r\n                    autoClose: 1000, // Set to 1000 ms (1 second)\r\n                });\r\n            })\r\n            .catch(err => {\r\n                toast.error(\"Failed to delete user.\");\r\n                // console.error('Error deleting user:', err);\r\n            });\r\n    };\r\n\r\n    const handleExport = async () => {\r\n        try {\r\n            const response = await axios.get('https://merncrudbackend-dvjr.onrender.com/api/exportUsers', {\r\n                responseType: 'blob', // Important for downloading files\r\n            });\r\n\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', 'export.csv');\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            link.remove();\r\n            toast.success(\"Data exported successfully!\", { autoClose: 1000, });\r\n        } catch (error) {\r\n            toast.error(\"Failed to export data.\");\r\n            // console.error('Error exporting data', error);\r\n        }\r\n    };\r\n\r\n    const handleImport = async (file) => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const response = await fetch('https://merncrudbackend-dvjr.onrender.com/api/importCsv', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Error importing CSV: ' + response.statusText);\r\n            }\r\n\r\n            const data = await response.text();\r\n            toast.success(\"Data imported successfully!\", { autoClose: 1000, });\r\n            // console.log('Import success:', data); // Log response for debugging\r\n            return data; // Return a success message or the data\r\n        } catch (error) {\r\n            toast.error(\"Failed to import data.\");\r\n            // console.error('Import error:', error.message);\r\n            throw error; // Re-throw for handling\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n\r\n        if (file) {\r\n            const fileExtension = file.name.split('.').pop().toLowerCase(); // Get file extension\r\n\r\n            if (fileExtension === 'csv') {\r\n                setSelectedFile(file);\r\n            } else {\r\n                setSelectedFile(null); // Reset the selected file\r\n                toast.error(\"Invalid file type! Please select a valid CSV file.\", {\r\n                    autoClose: 1000, // Auto close after 2 seconds\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleFileUpload = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (selectedFile) {\r\n            Papa.parse(selectedFile, {\r\n                header: true,\r\n                skipEmptyLines: true, // This option will skip empty lines in the CSV\r\n                complete: function (results) {\r\n                    const rows = results.data;\r\n\r\n                    // Check if CSV has no rows or only one row which is empty\r\n                    if (rows.length === 0 || rows.every(row => Object.values(row).every(value => value === \"\"))) {\r\n                        toast.error(\"Please enter the correct file, not empty.\", {\r\n                            autoClose: 2000, // Auto close after 2 seconds\r\n                        });\r\n                        return; // Stop the import process\r\n                    }\r\n\r\n                    // If valid, proceed with the import\r\n                    handleImport(selectedFile).then(() => {\r\n                        // Fetch updated users after import\r\n                        axios.get('https://merncrudbackend-dvjr.onrender.com')\r\n                            .then(response => {\r\n                                setUsers(response.data); // Update state with the latest users\r\n                                setSelectedFile(null);\r\n                                document.getElementById('csvFileInput').value = ''; // Reset the file input element\r\n                            })\r\n                            .catch(err => {\r\n                                console.error('Error fetching updated user list:', err);\r\n                            });\r\n                    }).catch(error => {\r\n                        console.error('Import error:', error);\r\n                    });\r\n                },\r\n                error: function (error) {\r\n                    console.error('Error parsing CSV:', error);\r\n                }\r\n            });\r\n        } else {\r\n            toast.error(\"No file selected. Please select a valid file.\", {\r\n                autoClose: 2000,\r\n            });\r\n        }\r\n    };\r\n    const indexOfLastUser = currentPage * usersPerPage; // Get index of the last user\r\n    const indexOfFirstUser = indexOfLastUser - usersPerPage; // Get index of the first user\r\n    const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser); // Get current users\r\n\r\n    const totalPages = Math.ceil(users.length / usersPerPage); // Total number of pages\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex vh-100 bg-primary justify-content-center align-items-center\">\r\n            <div className=\"w-50 bg-white rounded p-3\">\r\n                <Link to=\"/create\" className=\"btn btn-success\">Add +</Link>\r\n                <button className=\"btn btn-primary m-2\" onClick={handleExport}>Export CSV</button>\r\n                <div className=\"m-2\">\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"csvFileInput\"\r\n                        accept=\".csv\"\r\n                        className=\"m-2\"\r\n                        onChange={handleFileChange}\r\n                    />\r\n                    <button className=\"btn btn-warning\" onClick={handleFileUpload}>Import CSV</button>\r\n                </div>\r\n                {loading ? (\r\n                    <div className=\"text-center\">\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    users.length > 0 ? (\r\n                        <>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>No</th>\r\n                                        <th>Name</th>\r\n                                        <th>Email</th>\r\n                                        <th>Age</th>\r\n                                        <th style={{ textAlign: \"center\" }}>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentUsers.map((user, index) => (\r\n                                        <tr key={user._id}>\r\n                                            <td>{indexOfFirstUser + index + 1}</td>\r\n                                            <td>{user.name}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{user.age}</td>\r\n                                            <td>\r\n                                                <Link to={`/update/${user._id}`} className=\"btn btn-success m-2\">Update</Link>\r\n                                                <button\r\n                                                    className=\"btn btn-danger\"\r\n                                                    onClick={() => handleDelete(user._id)}>\r\n                                                    Delete\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <button\r\n                                    onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\r\n                                    disabled={currentPage === 1}\r\n                                    // className=\"btn btn-secondary\"\r\n                                    className=\"btn btn-primary\"\r\n                                >\r\n                                    Previous\r\n                                </button>\r\n                                <span>Page {currentPage} of {totalPages}</span>\r\n                                <button\r\n                                    onClick={() => setCurrentPage(prev => prev + 1)}\r\n                                    disabled={currentUsers.length < usersPerPage}\r\n                                    // className=\"btn btn-secondary\"\r\n                                    className=\"btn btn-success\"\r\n                                >\r\n                                    Next\r\n                                </button>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <div className=\"text-center\">\r\n                            <h3>No records found</h3>\r\n                        </div>\r\n                    )\r\n                )}\r\n            </div>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}