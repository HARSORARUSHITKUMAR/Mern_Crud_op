{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\Mern-Crud-Op\\\\frontend\\\\src\\\\components\\\\Users.js\",\n  _s = $RefreshSig$();\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n\n// const Users = () => {\n//     const [users, setUsers] = useState([]);\n//     const [loading, setLoading] = useState(true);\n\n//     useEffect(() => {\n//         setLoading(true);\n\n//         axios.get('https://merncrudbackend-1zpv.onrender.com')\n//             .then(result => {\n//                 setUsers(result.data);\n//                 setLoading(false);\n//             })\n//             .catch(err => {\n//                 console.log(err);\n//                 setLoading(false);\n//             })\n//     }, [])\n\n//     const handleDelete = (id) => {\n//         axios.delete('https://merncrudbackend-1zpv.onrender.com/deleteUser/' + id)\n//             .then(res => {\n//                 // Update the users state to remove the deleted user\n//                 setUsers(users.filter(user => user._id !== id));\n//             })\n//             .catch(err => console.log(err))\n//     };\n\n//     const handleExport = () => {\n//         fetch(`${process.env.mongoURI}/exportCsv`)\n//             .then(response => response.blob())\n//             .then(blob => {\n//                 const url = window.URL.createObjectURL(blob);\n//                 const a = document.createElement('a');\n//                 a.href = url;\n//                 a.download = 'users.csv'; // Name of the downloaded file\n//                 document.body.appendChild(a);\n//                 a.click();\n//                 a.remove();\n//             })\n//             .catch(err => {\n//                 console.error('Error exporting CSV:', err);\n//             });\n//     };\n\n//     const handleImport = (event) => {\n//         event.preventDefault();\n//         const fileInput = document.getElementById('csvFileInput');\n//         const file = fileInput.files[0];\n//         const formData = new FormData();\n//         formData.append('file', file);\n\n//         fetch(`${process.env.REACT_APP_API_URL}/importCsv`, {\n//             method: 'POST',\n//             body: formData,\n//         })\n//             .then(response => response.text())\n//             .then(data => {\n//                 alert('CSV Imported Successfully!');\n//                 console.log('Success:', data);\n//                 // Optionally, refresh the user list\n//                 window.location.reload();\n//             })\n//             .catch(err => {\n//                 console.error('Error importing CSV:', err);\n//             });\n//     };\n\n//     return (\n//         <div className=\"d-flex vh-100 bg-primary justify-content-center align-items-center\">\n//             <div className=\"w-50 bg-white rounded p-3\">\n//                 <Link to=\"/create\" className=\"btn btn-success\">Add +</Link>\n//                 {/* Add buttons for exporting and importing CSV */}\n//                 <button className=\"btn btn-primary m-2\" onClick={handleExport}>Export CSV</button>\n//                 <form className=\"m-2\" onSubmit={handleImport}>\n//                     <input type=\"file\" id=\"csvFileInput\" accept=\".csv\" required />\n//                     <button type=\"submit\" className=\"btn btn-warning m-2\">Import CSV</button>\n//                 </form>\n//                 {loading ? (\n//                     <div className=\"text-center\">\n//                         <div className=\"spinner-border\" role=\"status\">\n//                             <span className=\"visually-hidden\">Loading...</span>\n//                         </div>\n//                     </div>\n//                 ) : (\n//                     users.length > 0 ? (\n//                         <table className=\"table\">\n//                             <thead>\n//                                 <tr>\n//                                     <th>Name</th>\n//                                     <th>Email</th>\n//                                     <th>Age</th>\n//                                     <th style={{ textAlign: \"center\" }}>Action</th>\n//                                 </tr>\n//                             </thead>\n//                             <tbody>\n//                                 {\n//                                     users.map((user => {\n//                                         return <tr key={user._id}>\n//                                             <td>{user.name}</td>\n//                                             <td>{user.email}</td>\n//                                             <td>{user.age}</td>\n//                                             <td>\n//                                                 <Link to={`/update/${user._id}`} className=\"btn btn-success m-2\">Update</Link>\n//                                                 <button\n//                                                     className=\"btn btn-danger\"\n//                                                     onClick={(e) => handleDelete(user._id)}>\n//                                                     Delete\n//                                                 </button>\n\n//                                             </td>\n//                                         </tr>\n//                                     }))\n//                                 }\n//                             </tbody>\n//                         </table>\n//                     ) : <div className=\"text-center\">\n//                         <h3>No records found</h3>\n//                     </div>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n// export default Users;\n\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n\n// const Users = () => {\n//     const [users, setUsers] = useState([]);\n//     const [loading, setLoading] = useState(true);\n\n//     useEffect(() => {\n//         setLoading(true);\n//         axios.get('https://merncrudbackend-1zpv.onrender.com')\n//             .then(result => {\n//                 setUsers(result.data);\n//                 setLoading(false);\n//             })\n//             .catch(err => {\n//                 console.log(err);\n//                 setLoading(false);\n//             });\n//     }, []);\n\n//     const handleDelete = (id) => {\n//         axios.delete('https://merncrudbackend-1zpv.onrender.com/deleteUser/' + id)\n//             .then(res => {\n//                 // Update the users state to remove the deleted user\n//                 setUsers(users.filter(user => user._id !== id));\n//             })\n//             .catch(err => console.log(err));\n//     };\n\n//     const handleExport = async () => {\n//         try {\n//             const response = await axios.get('http://localhost:3001/api/exportUsers', {\n//                 responseType: 'blob', // Important for downloading files\n//             });\n\n//             const url = window.URL.createObjectURL(new Blob([response.data]));\n//             const link = document.createElement('a');\n//             link.href = url;\n//             link.setAttribute('download', 'export.csv');\n//             document.body.appendChild(link);\n//             link.click();\n//             link.remove();\n//         } catch (error) {\n//             console.error('Error exporting data', error);\n//         }\n//     };\n\n//     const handleImport = async (file) => {\n//         const formData = new FormData();\n//         formData.append('file', file);\n\n//         try {\n//             const response = await fetch('http://localhost:3001/api/importCsv', {\n//                 method: 'POST',\n//                 body: formData,\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error('Error importing CSV: ' + response.statusText);\n//             }\n\n//             const data = await response.text();\n//             console.log(data); // For debugging purposes\n//         } catch (error) {\n//             console.error(error.message);\n//         }\n//     };\n\n//     const handleFileChange = (event) => {\n//         const file = event.target.files[0];\n//         handleImport(file);\n//     };\n\n//     return (\n//         <div className=\"d-flex vh-100 bg-primary justify-content-center align-items-center\">\n//             <div className=\"w-50 bg-white rounded p-3\">\n//                 <Link to=\"/create\" className=\"btn btn-success\">Add +</Link>\n//                 {/* Button for exporting CSV */}\n//                 <button className=\"btn btn-primary m-2\" onClick={handleExport}>Export CSV</button>\n//                 {/* Form for importing CSV */}\n//                 <form className=\"m-2\" onSubmit={(e) => { e.preventDefault(); handleFileChange(e.target.csvFileInput); }}>\n//                     <input type=\"file\" id=\"csvFileInput\" accept=\".csv\" required />\n//                     <button type=\"submit\" className=\"btn btn-warning m-2\">Import CSV</button>\n//                 </form>\n//                 {loading ? (\n//                     <div className=\"text-center\">\n//                         <div className=\"spinner-border\" role=\"status\">\n//                             <span className=\"visually-hidden\">Loading...</span>\n//                         </div>\n//                     </div>\n//                 ) : (\n//                     users.length > 0 ? (\n//                         <table className=\"table\">\n//                             <thead>\n//                                 <tr>\n//                                     <th>Name</th>\n//                                     <th>Email</th>\n//                                     <th>Age</th>\n//                                     <th style={{ textAlign: \"center\" }}>Action</th>\n//                                 </tr>\n//                             </thead>\n//                             <tbody>\n//                                 {users.map(user => (\n//                                     <tr key={user._id}>\n//                                         <td>{user.name}</td>\n//                                         <td>{user.email}</td>\n//                                         <td>{user.age}</td>\n//                                         <td>\n//                                             <Link to={`/update/${user._id}`} className=\"btn btn-success m-2\">Update</Link>\n//                                             <button\n//                                                 className=\"btn btn-danger\"\n//                                                 onClick={() => handleDelete(user._id)}>\n//                                                 Delete\n//                                             </button>\n//                                         </td>\n//                                     </tr>\n//                                 ))}\n//                             </tbody>\n//                         </table>\n//                     ) : (\n//                         <div className=\"text-center\">\n//                             <h3>No records found</h3>\n//                         </div>\n//                     )\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Users;\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CSVImporter } from 'react-csv-importer';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver'; // Make sure to install file-saver for CSV download\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/users');\n        setUsers(response.data);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUsers();\n  }, []);\n  const handleDelete = async id => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        await axios.delete(`http://localhost:3001/api/users/${id}`);\n        setUsers(users.filter(user => user._id !== id));\n      } catch (error) {\n        console.error('Error deleting user:', error);\n      }\n    }\n  };\n  const handleFileChange = event => {\n    const files = event.target.files;\n    if (files.length > 0) {\n      const file = files[0];\n      console.log(file); // Log the file for debugging\n      // Optionally, you could implement additional file checks here\n    }\n  };\n  const handleImport = async data => {\n    console.log('Imported Data:', data);\n    // Here, you can make a request to your backend to save the imported data\n    try {\n      await axios.post('http://localhost:3001/api/users/import', data); // Adjust URL as necessary\n      // Optionally, refetch users to update the UI\n      const response = await axios.get('http://localhost:3001/api/users');\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error importing data:', error);\n    }\n  };\n  const handleExport = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/users/export', {\n        responseType: 'blob'\n      });\n      const blob = new Blob([response.data], {\n        type: 'text/csv'\n      });\n      saveAs(blob, 'users.csv'); // Use file-saver to download the file\n    } catch (error) {\n      console.error('Error exporting CSV:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex vh-100 bg-primary justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-50 bg-white rounded p-3\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create\",\n        className: \"btn btn-success\",\n        children: \"Add +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary m-2\",\n        onClick: handleExport,\n        children: \"Export CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsOpen(true),\n        className: \"btn btn-warning m-2\",\n        children: \"CSV Import\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \".csv, .xlsx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CSVImporter, {\n        modalIsOpen: isOpen,\n        modalOnCloseTriggered: () => setIsOpen(false),\n        darkMode: true,\n        onComplete: handleImport,\n        template: {\n          columns: [{\n            name: \"First Name\",\n            key: \"first_name\",\n            required: true,\n            description: \"The first name of the user\",\n            suggested_mappings: [\"First\", \"Name\"]\n          }, {\n            name: \"Age\",\n            data_type: \"number\"\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }, this) : users.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/update/${user._id}`,\n                className: \"btn btn-success m-2\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => handleDelete(user._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 41\n            }, this)]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No records found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 9\n  }, this);\n};\n_s(Users, \"JqDYUmX+dyWGA7C0eM7PEfgEb3o=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","Link","CSVImporter","axios","saveAs","jsxDEV","_jsxDEV","Users","_s","users","setUsers","loading","setLoading","isOpen","setIsOpen","fetchUsers","response","get","data","error","console","handleDelete","id","window","confirm","delete","filter","user","_id","handleFileChange","event","files","target","length","file","log","handleImport","post","handleExport","responseType","blob","Blob","type","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","accept","modalIsOpen","modalOnCloseTriggered","darkMode","onComplete","template","columns","name","key","required","description","suggested_mappings","data_type","role","style","textAlign","map","email","age","_c","$RefreshReg$"],"sources":["E:/PROJECTS/Mern-Crud-Op/frontend/src/components/Users.js"],"sourcesContent":["// import axios from \"axios\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const Users = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n\r\n\r\n//     useEffect(() => {\r\n//         setLoading(true);\r\n\r\n//         axios.get('https://merncrudbackend-1zpv.onrender.com')\r\n//             .then(result => {\r\n//                 setUsers(result.data);\r\n//                 setLoading(false);\r\n//             })\r\n//             .catch(err => {\r\n//                 console.log(err);\r\n//                 setLoading(false);\r\n//             })\r\n//     }, [])\r\n\r\n//     const handleDelete = (id) => {\r\n//         axios.delete('https://merncrudbackend-1zpv.onrender.com/deleteUser/' + id)\r\n//             .then(res => {\r\n//                 // Update the users state to remove the deleted user\r\n//                 setUsers(users.filter(user => user._id !== id));\r\n//             })\r\n//             .catch(err => console.log(err))\r\n//     };\r\n\r\n//     const handleExport = () => {\r\n//         fetch(`${process.env.mongoURI}/exportCsv`)\r\n//             .then(response => response.blob())\r\n//             .then(blob => {\r\n//                 const url = window.URL.createObjectURL(blob);\r\n//                 const a = document.createElement('a');\r\n//                 a.href = url;\r\n//                 a.download = 'users.csv'; // Name of the downloaded file\r\n//                 document.body.appendChild(a);\r\n//                 a.click();\r\n//                 a.remove();\r\n//             })\r\n//             .catch(err => {\r\n//                 console.error('Error exporting CSV:', err);\r\n//             });\r\n//     };\r\n\r\n//     const handleImport = (event) => {\r\n//         event.preventDefault();\r\n//         const fileInput = document.getElementById('csvFileInput');\r\n//         const file = fileInput.files[0];\r\n//         const formData = new FormData();\r\n//         formData.append('file', file);\r\n\r\n//         fetch(`${process.env.REACT_APP_API_URL}/importCsv`, {\r\n//             method: 'POST',\r\n//             body: formData,\r\n//         })\r\n//             .then(response => response.text())\r\n//             .then(data => {\r\n//                 alert('CSV Imported Successfully!');\r\n//                 console.log('Success:', data);\r\n//                 // Optionally, refresh the user list\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => {\r\n//                 console.error('Error importing CSV:', err);\r\n//             });\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"d-flex vh-100 bg-primary justify-content-center align-items-center\">\r\n//             <div className=\"w-50 bg-white rounded p-3\">\r\n//                 <Link to=\"/create\" className=\"btn btn-success\">Add +</Link>\r\n//                 {/* Add buttons for exporting and importing CSV */}\r\n//                 <button className=\"btn btn-primary m-2\" onClick={handleExport}>Export CSV</button>\r\n//                 <form className=\"m-2\" onSubmit={handleImport}>\r\n//                     <input type=\"file\" id=\"csvFileInput\" accept=\".csv\" required />\r\n//                     <button type=\"submit\" className=\"btn btn-warning m-2\">Import CSV</button>\r\n//                 </form>\r\n//                 {loading ? (\r\n//                     <div className=\"text-center\">\r\n//                         <div className=\"spinner-border\" role=\"status\">\r\n//                             <span className=\"visually-hidden\">Loading...</span>\r\n//                         </div>\r\n//                     </div>\r\n//                 ) : (\r\n//                     users.length > 0 ? (\r\n//                         <table className=\"table\">\r\n//                             <thead>\r\n//                                 <tr>\r\n//                                     <th>Name</th>\r\n//                                     <th>Email</th>\r\n//                                     <th>Age</th>\r\n//                                     <th style={{ textAlign: \"center\" }}>Action</th>\r\n//                                 </tr>\r\n//                             </thead>\r\n//                             <tbody>\r\n//                                 {\r\n//                                     users.map((user => {\r\n//                                         return <tr key={user._id}>\r\n//                                             <td>{user.name}</td>\r\n//                                             <td>{user.email}</td>\r\n//                                             <td>{user.age}</td>\r\n//                                             <td>\r\n//                                                 <Link to={`/update/${user._id}`} className=\"btn btn-success m-2\">Update</Link>\r\n//                                                 <button\r\n//                                                     className=\"btn btn-danger\"\r\n//                                                     onClick={(e) => handleDelete(user._id)}>\r\n//                                                     Delete\r\n//                                                 </button>\r\n\r\n//                                             </td>\r\n//                                         </tr>\r\n//                                     }))\r\n//                                 }\r\n//                             </tbody>\r\n//                         </table>\r\n//                     ) : <div className=\"text-center\">\r\n//                         <h3>No records found</h3>\r\n//                     </div>\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n// export default Users;\r\n\r\n// import axios from \"axios\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const Users = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n\r\n//     useEffect(() => {\r\n//         setLoading(true);\r\n//         axios.get('https://merncrudbackend-1zpv.onrender.com')\r\n//             .then(result => {\r\n//                 setUsers(result.data);\r\n//                 setLoading(false);\r\n//             })\r\n//             .catch(err => {\r\n//                 console.log(err);\r\n//                 setLoading(false);\r\n//             });\r\n//     }, []);\r\n\r\n//     const handleDelete = (id) => {\r\n//         axios.delete('https://merncrudbackend-1zpv.onrender.com/deleteUser/' + id)\r\n//             .then(res => {\r\n//                 // Update the users state to remove the deleted user\r\n//                 setUsers(users.filter(user => user._id !== id));\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     };\r\n\r\n//     const handleExport = async () => {\r\n//         try {\r\n//             const response = await axios.get('http://localhost:3001/api/exportUsers', {\r\n//                 responseType: 'blob', // Important for downloading files\r\n//             });\r\n\r\n//             const url = window.URL.createObjectURL(new Blob([response.data]));\r\n//             const link = document.createElement('a');\r\n//             link.href = url;\r\n//             link.setAttribute('download', 'export.csv');\r\n//             document.body.appendChild(link);\r\n//             link.click();\r\n//             link.remove();\r\n//         } catch (error) {\r\n//             console.error('Error exporting data', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleImport = async (file) => {\r\n//         const formData = new FormData();\r\n//         formData.append('file', file);\r\n\r\n//         try {\r\n//             const response = await fetch('http://localhost:3001/api/importCsv', {\r\n//                 method: 'POST',\r\n//                 body: formData,\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error('Error importing CSV: ' + response.statusText);\r\n//             }\r\n\r\n//             const data = await response.text();\r\n//             console.log(data); // For debugging purposes\r\n//         } catch (error) {\r\n//             console.error(error.message);\r\n//         }\r\n//     };\r\n\r\n//     const handleFileChange = (event) => {\r\n//         const file = event.target.files[0];\r\n//         handleImport(file);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"d-flex vh-100 bg-primary justify-content-center align-items-center\">\r\n//             <div className=\"w-50 bg-white rounded p-3\">\r\n//                 <Link to=\"/create\" className=\"btn btn-success\">Add +</Link>\r\n//                 {/* Button for exporting CSV */}\r\n//                 <button className=\"btn btn-primary m-2\" onClick={handleExport}>Export CSV</button>\r\n//                 {/* Form for importing CSV */}\r\n//                 <form className=\"m-2\" onSubmit={(e) => { e.preventDefault(); handleFileChange(e.target.csvFileInput); }}>\r\n//                     <input type=\"file\" id=\"csvFileInput\" accept=\".csv\" required />\r\n//                     <button type=\"submit\" className=\"btn btn-warning m-2\">Import CSV</button>\r\n//                 </form>\r\n//                 {loading ? (\r\n//                     <div className=\"text-center\">\r\n//                         <div className=\"spinner-border\" role=\"status\">\r\n//                             <span className=\"visually-hidden\">Loading...</span>\r\n//                         </div>\r\n//                     </div>\r\n//                 ) : (\r\n//                     users.length > 0 ? (\r\n//                         <table className=\"table\">\r\n//                             <thead>\r\n//                                 <tr>\r\n//                                     <th>Name</th>\r\n//                                     <th>Email</th>\r\n//                                     <th>Age</th>\r\n//                                     <th style={{ textAlign: \"center\" }}>Action</th>\r\n//                                 </tr>\r\n//                             </thead>\r\n//                             <tbody>\r\n//                                 {users.map(user => (\r\n//                                     <tr key={user._id}>\r\n//                                         <td>{user.name}</td>\r\n//                                         <td>{user.email}</td>\r\n//                                         <td>{user.age}</td>\r\n//                                         <td>\r\n//                                             <Link to={`/update/${user._id}`} className=\"btn btn-success m-2\">Update</Link>\r\n//                                             <button\r\n//                                                 className=\"btn btn-danger\"\r\n//                                                 onClick={() => handleDelete(user._id)}>\r\n//                                                 Delete\r\n//                                             </button>\r\n//                                         </td>\r\n//                                     </tr>\r\n//                                 ))}\r\n//                             </tbody>\r\n//                         </table>\r\n//                     ) : (\r\n//                         <div className=\"text-center\">\r\n//                             <h3>No records found</h3>\r\n//                         </div>\r\n//                     )\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Users;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CSVImporter } from 'react-csv-importer'; \r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver'; // Make sure to install file-saver for CSV download\r\n\r\nconst Users = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3001/api/users');\r\n                setUsers(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching users:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const handleDelete = async (id) => {\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            try {\r\n                await axios.delete(`http://localhost:3001/api/users/${id}`);\r\n                setUsers(users.filter(user => user._id !== id));\r\n            } catch (error) {\r\n                console.error('Error deleting user:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const files = event.target.files;\r\n        if (files.length > 0) {\r\n            const file = files[0];\r\n            console.log(file); // Log the file for debugging\r\n            // Optionally, you could implement additional file checks here\r\n        }\r\n    };\r\n\r\n    const handleImport = async (data) => {\r\n        console.log('Imported Data:', data);\r\n        // Here, you can make a request to your backend to save the imported data\r\n        try {\r\n            await axios.post('http://localhost:3001/api/users/import', data); // Adjust URL as necessary\r\n            // Optionally, refetch users to update the UI\r\n            const response = await axios.get('http://localhost:3001/api/users');\r\n            setUsers(response.data);\r\n        } catch (error) {\r\n            console.error('Error importing data:', error);\r\n        }\r\n    };\r\n\r\n    const handleExport = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/api/users/export', { responseType: 'blob' });\r\n            const blob = new Blob([response.data], { type: 'text/csv' });\r\n            saveAs(blob, 'users.csv'); // Use file-saver to download the file\r\n        } catch (error) {\r\n            console.error('Error exporting CSV:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex vh-100 bg-primary justify-content-center align-items-center\">\r\n            <div className=\"w-50 bg-white rounded p-3\">\r\n                <Link to=\"/create\" className=\"btn btn-success\">Add +</Link>\r\n                <button className=\"btn btn-primary m-2\" onClick={handleExport}>Export CSV</button>\r\n                <button onClick={() => setIsOpen(true)} className=\"btn btn-warning m-2\">CSV Import</button>\r\n                \r\n                <input \r\n                    type=\"file\" \r\n                    onChange={handleFileChange} \r\n                    accept=\".csv, .xlsx\" \r\n                />\r\n                \r\n                <CSVImporter\r\n                    modalIsOpen={isOpen}\r\n                    modalOnCloseTriggered={() => setIsOpen(false)}\r\n                    darkMode={true}\r\n                    onComplete={handleImport}\r\n                    template={{\r\n                        columns: [\r\n                            {\r\n                                name: \"First Name\",\r\n                                key: \"first_name\",\r\n                                required: true,\r\n                                description: \"The first name of the user\",\r\n                                suggested_mappings: [\"First\", \"Name\"],\r\n                            },\r\n                            {\r\n                                name: \"Age\",\r\n                                data_type: \"number\",\r\n                            },\r\n                        ],\r\n                    }}\r\n                />\r\n                \r\n                {loading ? (\r\n                    <div className=\"text-center\">\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    users.length > 0 ? (\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Age</th>\r\n                                    <th style={{ textAlign: \"center\" }}>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.age}</td>\r\n                                        <td>\r\n                                            <Link to={`/update/${user._id}`} className=\"btn btn-success m-2\">Update</Link>\r\n                                            <button\r\n                                                className=\"btn btn-danger\"\r\n                                                onClick={() => handleDelete(user._id)}>\r\n                                                Delete\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    ) : (\r\n                        <div className=\"text-center\">\r\n                            <h3>No records found</h3>\r\n                        </div>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}