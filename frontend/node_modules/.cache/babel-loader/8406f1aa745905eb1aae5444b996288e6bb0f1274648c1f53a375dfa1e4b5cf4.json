{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\Mern-Crud-Op\\\\frontend\\\\src\\\\components\\\\UsersList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Users from './Users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersList = () => {\n  _s();\n  // const [users, setUsers] = useState([]); // Initialize as empty array\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const limit = 5; // Limit of users per page\n\n  // Function to fetch users\n  const fetchUsers = async page => {\n    try {\n      const response = await axios.get(`http://localhost:3001/?page=${page}&limit=${limit}`);\n      console.log(response.data); // Log the response data\n      setUsers(response.data.users); // Set users state\n      setTotalPages(response.data.totalPages); // Set total pages state\n      setLoading(false); // Set loading to false\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n      setLoading(false); // Set loading to false on error\n    }\n  };\n  useEffect(() => {\n    fetchUsers(currentPage);\n  }, [currentPage]);\n\n  // Function to handle page change\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentPage === 1,\n        onClick: () => handlePageChange(currentPage - 1),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        disabled: currentPage === index + 1,\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentPage === totalPages,\n        onClick: () => handlePageChange(currentPage + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(UsersList, \"yRXLvOBwDErbEF7XJ+KZ/ZR31kI=\");\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Users","jsxDEV","_jsxDEV","UsersList","_s","currentPage","setCurrentPage","totalPages","setTotalPages","loading","setLoading","limit","fetchUsers","page","response","get","console","log","data","setUsers","users","error","handlePageChange","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","Array","from","length","_","index","_c","$RefreshReg$"],"sources":["E:/PROJECTS/Mern-Crud-Op/frontend/src/components/UsersList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Users from './Users';\r\n\r\nconst UsersList = () => {\r\n    // const [users, setUsers] = useState([]); // Initialize as empty array\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const limit = 5; // Limit of users per page\r\n\r\n    // Function to fetch users\r\n    const fetchUsers = async (page) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:3001/?page=${page}&limit=${limit}`);\r\n            console.log(response.data); // Log the response data\r\n            setUsers(response.data.users); // Set users state\r\n            setTotalPages(response.data.totalPages); // Set total pages state\r\n            setLoading(false); // Set loading to false\r\n        } catch (error) {\r\n            console.error(\"Error fetching users:\", error);\r\n            setLoading(false); // Set loading to false on error\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUsers(currentPage);\r\n    }, [currentPage]);\r\n\r\n    // Function to handle page change\r\n    const handlePageChange = (page) => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Users />\r\n            <div>\r\n                <button \r\n                    disabled={currentPage === 1} \r\n                    onClick={() => handlePageChange(currentPage - 1)}\r\n                >\r\n                    Previous\r\n                </button>\r\n                {Array.from({ length: totalPages }, (_, index) => (\r\n                    <button \r\n                        key={index + 1} \r\n                        onClick={() => handlePageChange(index + 1)} \r\n                        disabled={currentPage === index + 1}\r\n                    >\r\n                        {index + 1}\r\n                    </button>\r\n                ))}\r\n                <button \r\n                    disabled={currentPage === totalPages} \r\n                    onClick={() => handlePageChange(currentPage + 1)}\r\n                >\r\n                    Next\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}