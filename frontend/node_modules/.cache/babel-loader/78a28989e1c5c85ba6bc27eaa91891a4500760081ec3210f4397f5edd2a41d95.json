{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\Mern-Crud-Op\\\\frontend\\\\src\\\\components\\\\Users.js\",\n  _s = $RefreshSig$();\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n\n// const Users = () => {\n//     const [users, setUsers] = useState([]);\n//     const [loading, setLoading] = useState(true);\n\n//     useEffect(() => {\n//         setLoading(true);\n\n//         axios.get('https://merncrudbackend-1zpv.onrender.com')\n//             .then(result => {\n//                 setUsers(result.data);\n//                 setLoading(false);\n//             })\n//             .catch(err => {\n//                 console.log(err);\n//                 setLoading(false);\n//             })\n//     }, [])\n\n//     const handleDelete = (id) => {\n//         axios.delete('https://merncrudbackend-1zpv.onrender.com/deleteUser/' + id)\n//             .then(res => {\n//                 // Update the users state to remove the deleted user\n//                 setUsers(users.filter(user => user._id !== id));\n//             })\n//             .catch(err => console.log(err))\n//     };\n\n//     const handleExport = () => {\n//         fetch(`${process.env.mongoURI}/exportCsv`)\n//             .then(response => response.blob())\n//             .then(blob => {\n//                 const url = window.URL.createObjectURL(blob);\n//                 const a = document.createElement('a');\n//                 a.href = url;\n//                 a.download = 'users.csv'; // Name of the downloaded file\n//                 document.body.appendChild(a);\n//                 a.click();\n//                 a.remove();\n//             })\n//             .catch(err => {\n//                 console.error('Error exporting CSV:', err);\n//             });\n//     };\n\n//     const handleImport = (event) => {\n//         event.preventDefault();\n//         const fileInput = document.getElementById('csvFileInput');\n//         const file = fileInput.files[0];\n//         const formData = new FormData();\n//         formData.append('file', file);\n\n//         fetch(`${process.env.REACT_APP_API_URL}/importCsv`, {\n//             method: 'POST',\n//             body: formData,\n//         })\n//             .then(response => response.text())\n//             .then(data => {\n//                 alert('CSV Imported Successfully!');\n//                 console.log('Success:', data);\n//                 // Optionally, refresh the user list\n//                 window.location.reload();\n//             })\n//             .catch(err => {\n//                 console.error('Error importing CSV:', err);\n//             });\n//     };\n\n//     return (\n//         <div className=\"d-flex vh-100 bg-primary justify-content-center align-items-center\">\n//             <div className=\"w-50 bg-white rounded p-3\">\n//                 <Link to=\"/create\" className=\"btn btn-success\">Add +</Link>\n//                 {/* Add buttons for exporting and importing CSV */}\n//                 <button className=\"btn btn-primary m-2\" onClick={handleExport}>Export CSV</button>\n//                 <form className=\"m-2\" onSubmit={handleImport}>\n//                     <input type=\"file\" id=\"csvFileInput\" accept=\".csv\" required />\n//                     <button type=\"submit\" className=\"btn btn-warning m-2\">Import CSV</button>\n//                 </form>\n//                 {loading ? (\n//                     <div className=\"text-center\">\n//                         <div className=\"spinner-border\" role=\"status\">\n//                             <span className=\"visually-hidden\">Loading...</span>\n//                         </div>\n//                     </div>\n//                 ) : (\n//                     users.length > 0 ? (\n//                         <table className=\"table\">\n//                             <thead>\n//                                 <tr>\n//                                     <th>Name</th>\n//                                     <th>Email</th>\n//                                     <th>Age</th>\n//                                     <th style={{ textAlign: \"center\" }}>Action</th>\n//                                 </tr>\n//                             </thead>\n//                             <tbody>\n//                                 {\n//                                     users.map((user => {\n//                                         return <tr key={user._id}>\n//                                             <td>{user.name}</td>\n//                                             <td>{user.email}</td>\n//                                             <td>{user.age}</td>\n//                                             <td>\n//                                                 <Link to={`/update/${user._id}`} className=\"btn btn-success m-2\">Update</Link>\n//                                                 <button\n//                                                     className=\"btn btn-danger\"\n//                                                     onClick={(e) => handleDelete(user._id)}>\n//                                                     Delete\n//                                                 </button>\n\n//                                             </td>\n//                                         </tr>\n//                                     }))\n//                                 }\n//                             </tbody>\n//                         </table>\n//                     ) : <div className=\"text-center\">\n//                         <h3>No records found</h3>\n//                     </div>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n// export default Users;\n\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n\n// const Users = () => {\n//     const [users, setUsers] = useState([]);\n//     const [loading, setLoading] = useState(true);\n\n//     useEffect(() => {\n//         setLoading(true);\n//         axios.get('https://merncrudbackend-1zpv.onrender.com')\n//             .then(result => {\n//                 setUsers(result.data);\n//                 setLoading(false);\n//             })\n//             .catch(err => {\n//                 console.log(err);\n//                 setLoading(false);\n//             });\n//     }, []);\n\n//     const handleDelete = (id) => {\n//         axios.delete('https://merncrudbackend-1zpv.onrender.com/deleteUser/' + id)\n//             .then(res => {\n//                 // Update the users state to remove the deleted user\n//                 setUsers(users.filter(user => user._id !== id));\n//             })\n//             .catch(err => console.log(err));\n//     };\n\n//     const handleExport = async () => {\n//         try {\n//             const response = await axios.get('http://localhost:3001/api/exportUsers', {\n//                 responseType: 'blob', // Important for downloading files\n//             });\n\n//             const url = window.URL.createObjectURL(new Blob([response.data]));\n//             const link = document.createElement('a');\n//             link.href = url;\n//             link.setAttribute('download', 'export.csv');\n//             document.body.appendChild(link);\n//             link.click();\n//             link.remove();\n//         } catch (error) {\n//             console.error('Error exporting data', error);\n//         }\n//     };\n\n//     const handleImport = async (file) => {\n//         const formData = new FormData();\n//         formData.append('file', file);\n\n//         try {\n//             const response = await fetch('http://localhost:3001/api/importCsv', {\n//                 method: 'POST',\n//                 body: formData,\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error('Error importing CSV: ' + response.statusText);\n//             }\n\n//             const data = await response.text();\n//             console.log(data); // For debugging purposes\n//         } catch (error) {\n//             console.error(error.message);\n//         }\n//     };\n\n//     const handleFileChange = (event) => {\n//         const file = event.target.files[0];\n//         handleImport(file);\n//     };\n\n//     return (\n//         <div className=\"d-flex vh-100 bg-primary justify-content-center align-items-center\">\n//             <div className=\"w-50 bg-white rounded p-3\">\n//                 <Link to=\"/create\" className=\"btn btn-success\">Add +</Link>\n//                 {/* Button for exporting CSV */}\n//                 <button className=\"btn btn-primary m-2\" onClick={handleExport}>Export CSV</button>\n//                 {/* Form for importing CSV */}\n//                 <form className=\"m-2\" onSubmit={(e) => { e.preventDefault(); handleFileChange(e.target.csvFileInput); }}>\n//                     <input type=\"file\" id=\"csvFileInput\" accept=\".csv\" required />\n//                     <button type=\"submit\" className=\"btn btn-warning m-2\">Import CSV</button>\n//                 </form>\n//                 {loading ? (\n//                     <div className=\"text-center\">\n//                         <div className=\"spinner-border\" role=\"status\">\n//                             <span className=\"visually-hidden\">Loading...</span>\n//                         </div>\n//                     </div>\n//                 ) : (\n//                     users.length > 0 ? (\n//                         <table className=\"table\">\n//                             <thead>\n//                                 <tr>\n//                                     <th>Name</th>\n//                                     <th>Email</th>\n//                                     <th>Age</th>\n//                                     <th style={{ textAlign: \"center\" }}>Action</th>\n//                                 </tr>\n//                             </thead>\n//                             <tbody>\n//                                 {users.map(user => (\n//                                     <tr key={user._id}>\n//                                         <td>{user.name}</td>\n//                                         <td>{user.email}</td>\n//                                         <td>{user.age}</td>\n//                                         <td>\n//                                             <Link to={`/update/${user._id}`} className=\"btn btn-success m-2\">Update</Link>\n//                                             <button\n//                                                 className=\"btn btn-danger\"\n//                                                 onClick={() => handleDelete(user._id)}>\n//                                                 Delete\n//                                             </button>\n//                                         </td>\n//                                     </tr>\n//                                 ))}\n//                             </tbody>\n//                         </table>\n//                     ) : (\n//                         <div className=\"text-center\">\n//                             <h3>No records found</h3>\n//                         </div>\n//                     )\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Users;\n\n// @@@@@@@@@@@@@@@@@@@@@@@@\n// PROPER WORK CODE \n// @@@@@@@@@@@@@@@@@@@@@@@@\n\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import Papa from 'papaparse';\n// import { Link } from \"react-router-dom\";\n\n// const Users = () => {\n//     const [users, setUsers] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [selectedFile, setSelectedFile] = useState(null); // State to hold the selected file\n\n//     useEffect(() => {\n//         setLoading(true);\n//         axios.get('https://merncrudbackend-1zpv.onrender.com')\n//             .then(result => {\n//                 setUsers(result.data);\n//                 setLoading(false);\n//             })\n//             .catch(err => {\n//                 console.log(err);\n//                 setLoading(false);\n//             });\n//     }, []);\n\n//     const handleDelete = (id) => {\n//         // console.log('id', id)\n//         axios.delete('https://merncrudbackend-1zpv.onrender.com/deleteUser/' + id)\n//             .then(res => {\n//                 setUsers(users.filter(user => user._id !== id)); // Update state after deletion\n//             })\n//             .catch(err => console.log(err));\n//     }; \n\n//     const handleExport = async () => {\n//         try {\n//             const response = await axios.get('http://localhost:3001/api/exportUsers', {\n//                 responseType: 'blob', // Important for downloading files\n//             });\n\n//             const url = window.URL.createObjectURL(new Blob([response.data]));\n//             const link = document.createElement('a');\n//             link.href = url;\n//             link.setAttribute('download', 'export.csv');\n//             document.body.appendChild(link);\n//             link.click();\n//             link.remove();\n//         } catch (error) {\n//             console.error('Error exporting data', error);\n//         }\n//     };\n\n//     const handleImport = async (file) => {\n//         const formData = new FormData();\n//         formData.append('file', file);\n//         // console.log('formData', formData)\n//         try {\n//             const response = await fetch('http://localhost:3001/api/importCsv', {\n//                 method: 'POST',\n//                 body: formData,\n//             });\n//             // console.log('response', response)\n//             if (!response.ok) {\n//                 throw new Error('Error importing CSV: ' + response.statusText);\n//             }\n\n//             const data = await response.text();\n//             console.log('Import success:', data); // Log response for debugging\n//         } catch (error) {\n//             console.error('Import error:', error.message);\n//         }\n//     };\n\n//     const handleFileChange = (event) => {\n//         const file = event.target.files[0]; // Access the first file from the input\n//         setSelectedFile(file); // Save the selected file to state\n//         console.log('File selected:', file); // Log the file for debugging\n//     };\n\n//     const handleFileUpload = (event) => {\n//         event.preventDefault();\n//         if (selectedFile) {\n//             Papa.parse(selectedFile, {\n//                 header: true, // If the CSV file has headers\n//                 complete: function (results) {\n//                     console.log('Parsed CSV Data:', results.data); // Log parsed data from CSV\n\n//                     // Handle import and update users list\n//                     handleImport(selectedFile).then(() => {\n//                         // Fetch updated users after import\n//                         axios.get('https://merncrudbackend-1zpv.onrender.com')\n//                             .then(response => {\n//                                 setUsers(response.data); // Update state with the latest users\n//                             })\n//                             .catch(err => {\n//                                 console.error('Error fetching updated user list:', err);\n//                             });\n//                     }).catch(error => {\n//                         console.error('Import error:', error);\n//                     });\n//                 },\n//                 error: function (error) {\n//                     console.error('Error parsing CSV:', error);\n//                 }\n//             });\n//         } else {\n//             console.error('No file selected for import');\n//             alert('Please select a file before importing.');\n//         }\n//     };\n\n//     return (\n//         <div className=\"d-flex vh-100 bg-primary justify-content-center align-items-center\">\n//             <div className=\"w-50 bg-white rounded p-3\">\n//                 <Link to=\"/create\" className=\"btn btn-success\">Add +</Link>\n//                 {/* Button for exporting CSV */}\n//                 <button className=\"btn btn-primary m-2\" onClick={handleExport}>Export CSV</button>\n//                 {/* Form for importing CSV */}\n//                 <div className=\"m-2\">\n//                     <input\n//                         type=\"file\"\n//                         id=\"csvFileInput\"\n//                         accept=\".csv\"\n//                         className=\"m-2\"\n//                         onChange={handleFileChange}\n//                     />\n//                     <button className=\"btn btn-warning\" onClick={handleFileUpload}>Import CSV</button>\n//                 </div>\n//                 {loading ? (\n//                     <div className=\"text-center\">\n//                         <div className=\"spinner-border\" role=\"status\">\n//                             <span className=\"visually-hidden\">Loading...</span>\n//                         </div>\n//                     </div>\n//                 ) : (\n//                     users.length > 0 ? (\n//                         <table className=\"table\">\n//                             <thead>\n//                                 <tr>\n//                                     <th>Name</th>\n//                                     <th>Email</th>\n//                                     <th>Age</th>\n//                                     <th style={{ textAlign: \"center\" }}>Action</th>\n//                                 </tr>\n//                             </thead>\n//                             <tbody>\n//                                 {users.map((user, index) => (\n//                                     <tr key={index}>\n//                                     {/* {console.log(\"user\",user)} */}\n//                                         <td>{user.name}</td>\n//                                         <td>{user.email}</td>\n//                                         <td>{user.age}</td>\n//                                         <td>\n//                                             <Link to={`/update/${user._id}`} className=\"btn btn-success m-2\">Update</Link>\n//                                             <button\n//                                                 className=\"btn btn-danger\"\n//                                                 onClick={() => handleDelete(user?._id)}>\n//                                                 Delete\n//                                             </button>\n//                                         </td>\n//                                     </tr>\n//                                 ))}\n//                             </tbody>\n//                         </table>\n//                     ) : (\n//                         <div className=\"text-center\">\n//                             <h3>No records found</h3>\n//                         </div>\n//                     )\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Users;\n\n// ###################################\n// TRY NEW CODE\n// ####################################\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Papa from 'papaparse';\nimport { Link } from \"react-router-dom\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedFile, setSelectedFile] = useState(null); // State to hold the selected file\n\n  useEffect(() => {\n    setLoading(true);\n    axios.get('https://merncrudbackend-1zpv.onrender.com').then(result => {\n      setUsers(result.data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n    });\n  }, []);\n  const handleDelete = id => {\n    axios.delete(`https://merncrudbackend-1zpv.onrender.com/deleteUser/${id}`).then(res => {\n      // Update state after deletion\n      setUsers(prevUsers => prevUsers.filter(user => user._id !== id));\n      toast.success(\"User deleted successfully!\", {\n        autoClose: 1000,\n        // Set to 1000 ms (1 second)\n        style: {\n          color: '#F44336'\n        },\n        // Text color red\n        icon: () => /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            color: '#F44336'\n          },\n          className: \"fas fa-exclamation-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 33\n        }, this)\n      });\n    }).catch(err => {\n      toast.error(\"Failed to delete user.\");\n      // console.error('Error deleting user:', err);\n    });\n  };\n  const handleExport = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/exportUsers', {\n        responseType: 'blob' // Important for downloading files\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'export.csv');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      toast.success(\"Data exported successfully!\", {\n        autoClose: 1000\n      });\n    } catch (error) {\n      toast.error(\"Failed to export data.\");\n      // console.error('Error exporting data', error);\n    }\n  };\n  const handleImport = async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://localhost:3001/api/importCsv', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Error importing CSV: ' + response.statusText);\n      }\n      const data = await response.text();\n      toast.success(\"Data imported successfully!\", {\n        autoClose: 1000\n      });\n      // console.log('Import success:', data); // Log response for debugging\n      return data; // Return a success message or the data\n    } catch (error) {\n      toast.error(\"Failed to import data.\");\n      // console.error('Import error:', error.message);\n      throw error; // Re-throw for handling\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    // console.log('File selected:', file);\n  };\n  const handleFileUpload = event => {\n    event.preventDefault();\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        header: true,\n        complete: function (results) {\n          // console.log('Parsed CSV Data:', results.data);\n\n          // Handle import and update users list\n          handleImport(selectedFile).then(() => {\n            // Fetch updated users after import\n            axios.get('https://merncrudbackend-1zpv.onrender.com').then(response => {\n              setUsers(response.data); // Update state with the latest users\n            }).catch(err => {\n              console.error('Error fetching updated user list:', err);\n            });\n          }).catch(error => {\n            console.error('Import error:', error);\n          });\n        },\n        error: function (error) {\n          console.error('Error parsing CSV:', error);\n        }\n      });\n    } else {\n      console.error('No file selected for import');\n      alert('Please select a file before importing.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex vh-100 bg-primary justify-content-center align-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-50 bg-white rounded p-3\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create\",\n        className: \"btn btn-success\",\n        children: \"Add +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary m-2\",\n        onClick: handleExport,\n        children: \"Export CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"csvFileInput\",\n          accept: \".csv\",\n          className: \"m-2\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: handleFileUpload,\n          children: \"Import CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 21\n      }, this) : users.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/update/${user._id}`,\n                className: \"btn btn-success m-2\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => handleDelete(user._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 41\n            }, this)]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No records found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 577,\n    columnNumber: 9\n  }, this);\n};\n_s(Users, \"iL7Baf01xNVoY8Su9jFYINk5FT4=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["axios","useEffect","useState","Papa","Link","toast","ToastContainer","jsxDEV","_jsxDEV","Users","_s","users","setUsers","loading","setLoading","selectedFile","setSelectedFile","get","then","result","data","catch","err","console","log","handleDelete","id","delete","res","prevUsers","filter","user","_id","success","autoClose","style","color","icon","className","fileName","_jsxFileName","lineNumber","columnNumber","error","handleExport","response","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","handleImport","file","formData","FormData","append","fetch","method","ok","Error","statusText","text","handleFileChange","event","target","files","handleFileUpload","preventDefault","parse","header","complete","results","alert","children","to","onClick","type","accept","onChange","role","length","textAlign","map","name","email","age","_c","$RefreshReg$"],"sources":["E:/PROJECTS/Mern-Crud-Op/frontend/src/components/Users.js"],"sourcesContent":["// import axios from \"axios\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const Users = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n\r\n\r\n//     useEffect(() => {\r\n//         setLoading(true);\r\n\r\n//         axios.get('https://merncrudbackend-1zpv.onrender.com')\r\n//             .then(result => {\r\n//                 setUsers(result.data);\r\n//                 setLoading(false);\r\n//             })\r\n//             .catch(err => {\r\n//                 console.log(err);\r\n//                 setLoading(false);\r\n//             })\r\n//     }, [])\r\n\r\n//     const handleDelete = (id) => {\r\n//         axios.delete('https://merncrudbackend-1zpv.onrender.com/deleteUser/' + id)\r\n//             .then(res => {\r\n//                 // Update the users state to remove the deleted user\r\n//                 setUsers(users.filter(user => user._id !== id));\r\n//             })\r\n//             .catch(err => console.log(err))\r\n//     };\r\n\r\n//     const handleExport = () => {\r\n//         fetch(`${process.env.mongoURI}/exportCsv`)\r\n//             .then(response => response.blob())\r\n//             .then(blob => {\r\n//                 const url = window.URL.createObjectURL(blob);\r\n//                 const a = document.createElement('a');\r\n//                 a.href = url;\r\n//                 a.download = 'users.csv'; // Name of the downloaded file\r\n//                 document.body.appendChild(a);\r\n//                 a.click();\r\n//                 a.remove();\r\n//             })\r\n//             .catch(err => {\r\n//                 console.error('Error exporting CSV:', err);\r\n//             });\r\n//     };\r\n\r\n//     const handleImport = (event) => {\r\n//         event.preventDefault();\r\n//         const fileInput = document.getElementById('csvFileInput');\r\n//         const file = fileInput.files[0];\r\n//         const formData = new FormData();\r\n//         formData.append('file', file);\r\n\r\n//         fetch(`${process.env.REACT_APP_API_URL}/importCsv`, {\r\n//             method: 'POST',\r\n//             body: formData,\r\n//         })\r\n//             .then(response => response.text())\r\n//             .then(data => {\r\n//                 alert('CSV Imported Successfully!');\r\n//                 console.log('Success:', data);\r\n//                 // Optionally, refresh the user list\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => {\r\n//                 console.error('Error importing CSV:', err);\r\n//             });\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"d-flex vh-100 bg-primary justify-content-center align-items-center\">\r\n//             <div className=\"w-50 bg-white rounded p-3\">\r\n//                 <Link to=\"/create\" className=\"btn btn-success\">Add +</Link>\r\n//                 {/* Add buttons for exporting and importing CSV */}\r\n//                 <button className=\"btn btn-primary m-2\" onClick={handleExport}>Export CSV</button>\r\n//                 <form className=\"m-2\" onSubmit={handleImport}>\r\n//                     <input type=\"file\" id=\"csvFileInput\" accept=\".csv\" required />\r\n//                     <button type=\"submit\" className=\"btn btn-warning m-2\">Import CSV</button>\r\n//                 </form>\r\n//                 {loading ? (\r\n//                     <div className=\"text-center\">\r\n//                         <div className=\"spinner-border\" role=\"status\">\r\n//                             <span className=\"visually-hidden\">Loading...</span>\r\n//                         </div>\r\n//                     </div>\r\n//                 ) : (\r\n//                     users.length > 0 ? (\r\n//                         <table className=\"table\">\r\n//                             <thead>\r\n//                                 <tr>\r\n//                                     <th>Name</th>\r\n//                                     <th>Email</th>\r\n//                                     <th>Age</th>\r\n//                                     <th style={{ textAlign: \"center\" }}>Action</th>\r\n//                                 </tr>\r\n//                             </thead>\r\n//                             <tbody>\r\n//                                 {\r\n//                                     users.map((user => {\r\n//                                         return <tr key={user._id}>\r\n//                                             <td>{user.name}</td>\r\n//                                             <td>{user.email}</td>\r\n//                                             <td>{user.age}</td>\r\n//                                             <td>\r\n//                                                 <Link to={`/update/${user._id}`} className=\"btn btn-success m-2\">Update</Link>\r\n//                                                 <button\r\n//                                                     className=\"btn btn-danger\"\r\n//                                                     onClick={(e) => handleDelete(user._id)}>\r\n//                                                     Delete\r\n//                                                 </button>\r\n\r\n//                                             </td>\r\n//                                         </tr>\r\n//                                     }))\r\n//                                 }\r\n//                             </tbody>\r\n//                         </table>\r\n//                     ) : <div className=\"text-center\">\r\n//                         <h3>No records found</h3>\r\n//                     </div>\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n// export default Users;\r\n\r\n// import axios from \"axios\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const Users = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n\r\n//     useEffect(() => {\r\n//         setLoading(true);\r\n//         axios.get('https://merncrudbackend-1zpv.onrender.com')\r\n//             .then(result => {\r\n//                 setUsers(result.data);\r\n//                 setLoading(false);\r\n//             })\r\n//             .catch(err => {\r\n//                 console.log(err);\r\n//                 setLoading(false);\r\n//             });\r\n//     }, []);\r\n\r\n//     const handleDelete = (id) => {\r\n//         axios.delete('https://merncrudbackend-1zpv.onrender.com/deleteUser/' + id)\r\n//             .then(res => {\r\n//                 // Update the users state to remove the deleted user\r\n//                 setUsers(users.filter(user => user._id !== id));\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     };\r\n\r\n//     const handleExport = async () => {\r\n//         try {\r\n//             const response = await axios.get('http://localhost:3001/api/exportUsers', {\r\n//                 responseType: 'blob', // Important for downloading files\r\n//             });\r\n\r\n//             const url = window.URL.createObjectURL(new Blob([response.data]));\r\n//             const link = document.createElement('a');\r\n//             link.href = url;\r\n//             link.setAttribute('download', 'export.csv');\r\n//             document.body.appendChild(link);\r\n//             link.click();\r\n//             link.remove();\r\n//         } catch (error) {\r\n//             console.error('Error exporting data', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleImport = async (file) => {\r\n//         const formData = new FormData();\r\n//         formData.append('file', file);\r\n\r\n//         try {\r\n//             const response = await fetch('http://localhost:3001/api/importCsv', {\r\n//                 method: 'POST',\r\n//                 body: formData,\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error('Error importing CSV: ' + response.statusText);\r\n//             }\r\n\r\n//             const data = await response.text();\r\n//             console.log(data); // For debugging purposes\r\n//         } catch (error) {\r\n//             console.error(error.message);\r\n//         }\r\n//     };\r\n\r\n//     const handleFileChange = (event) => {\r\n//         const file = event.target.files[0];\r\n//         handleImport(file);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"d-flex vh-100 bg-primary justify-content-center align-items-center\">\r\n//             <div className=\"w-50 bg-white rounded p-3\">\r\n//                 <Link to=\"/create\" className=\"btn btn-success\">Add +</Link>\r\n//                 {/* Button for exporting CSV */}\r\n//                 <button className=\"btn btn-primary m-2\" onClick={handleExport}>Export CSV</button>\r\n//                 {/* Form for importing CSV */}\r\n//                 <form className=\"m-2\" onSubmit={(e) => { e.preventDefault(); handleFileChange(e.target.csvFileInput); }}>\r\n//                     <input type=\"file\" id=\"csvFileInput\" accept=\".csv\" required />\r\n//                     <button type=\"submit\" className=\"btn btn-warning m-2\">Import CSV</button>\r\n//                 </form>\r\n//                 {loading ? (\r\n//                     <div className=\"text-center\">\r\n//                         <div className=\"spinner-border\" role=\"status\">\r\n//                             <span className=\"visually-hidden\">Loading...</span>\r\n//                         </div>\r\n//                     </div>\r\n//                 ) : (\r\n//                     users.length > 0 ? (\r\n//                         <table className=\"table\">\r\n//                             <thead>\r\n//                                 <tr>\r\n//                                     <th>Name</th>\r\n//                                     <th>Email</th>\r\n//                                     <th>Age</th>\r\n//                                     <th style={{ textAlign: \"center\" }}>Action</th>\r\n//                                 </tr>\r\n//                             </thead>\r\n//                             <tbody>\r\n//                                 {users.map(user => (\r\n//                                     <tr key={user._id}>\r\n//                                         <td>{user.name}</td>\r\n//                                         <td>{user.email}</td>\r\n//                                         <td>{user.age}</td>\r\n//                                         <td>\r\n//                                             <Link to={`/update/${user._id}`} className=\"btn btn-success m-2\">Update</Link>\r\n//                                             <button\r\n//                                                 className=\"btn btn-danger\"\r\n//                                                 onClick={() => handleDelete(user._id)}>\r\n//                                                 Delete\r\n//                                             </button>\r\n//                                         </td>\r\n//                                     </tr>\r\n//                                 ))}\r\n//                             </tbody>\r\n//                         </table>\r\n//                     ) : (\r\n//                         <div className=\"text-center\">\r\n//                             <h3>No records found</h3>\r\n//                         </div>\r\n//                     )\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Users;\r\n\r\n\r\n// @@@@@@@@@@@@@@@@@@@@@@@@\r\n// PROPER WORK CODE \r\n// @@@@@@@@@@@@@@@@@@@@@@@@\r\n\r\n// import axios from \"axios\";\r\n// import { useEffect, useState } from \"react\";\r\n// import Papa from 'papaparse';\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const Users = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [selectedFile, setSelectedFile] = useState(null); // State to hold the selected file\r\n\r\n//     useEffect(() => {\r\n//         setLoading(true);\r\n//         axios.get('https://merncrudbackend-1zpv.onrender.com')\r\n//             .then(result => {\r\n//                 setUsers(result.data);\r\n//                 setLoading(false);\r\n//             })\r\n//             .catch(err => {\r\n//                 console.log(err);\r\n//                 setLoading(false);\r\n//             });\r\n//     }, []);\r\n\r\n//     const handleDelete = (id) => {\r\n//         // console.log('id', id)\r\n//         axios.delete('https://merncrudbackend-1zpv.onrender.com/deleteUser/' + id)\r\n//             .then(res => {\r\n//                 setUsers(users.filter(user => user._id !== id)); // Update state after deletion\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     }; \r\n\r\n//     const handleExport = async () => {\r\n//         try {\r\n//             const response = await axios.get('http://localhost:3001/api/exportUsers', {\r\n//                 responseType: 'blob', // Important for downloading files\r\n//             });\r\n\r\n//             const url = window.URL.createObjectURL(new Blob([response.data]));\r\n//             const link = document.createElement('a');\r\n//             link.href = url;\r\n//             link.setAttribute('download', 'export.csv');\r\n//             document.body.appendChild(link);\r\n//             link.click();\r\n//             link.remove();\r\n//         } catch (error) {\r\n//             console.error('Error exporting data', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleImport = async (file) => {\r\n//         const formData = new FormData();\r\n//         formData.append('file', file);\r\n//         // console.log('formData', formData)\r\n//         try {\r\n//             const response = await fetch('http://localhost:3001/api/importCsv', {\r\n//                 method: 'POST',\r\n//                 body: formData,\r\n//             });\r\n//             // console.log('response', response)\r\n//             if (!response.ok) {\r\n//                 throw new Error('Error importing CSV: ' + response.statusText);\r\n//             }\r\n\r\n//             const data = await response.text();\r\n//             console.log('Import success:', data); // Log response for debugging\r\n//         } catch (error) {\r\n//             console.error('Import error:', error.message);\r\n//         }\r\n//     };\r\n\r\n//     const handleFileChange = (event) => {\r\n//         const file = event.target.files[0]; // Access the first file from the input\r\n//         setSelectedFile(file); // Save the selected file to state\r\n//         console.log('File selected:', file); // Log the file for debugging\r\n//     };\r\n\r\n//     const handleFileUpload = (event) => {\r\n//         event.preventDefault();\r\n//         if (selectedFile) {\r\n//             Papa.parse(selectedFile, {\r\n//                 header: true, // If the CSV file has headers\r\n//                 complete: function (results) {\r\n//                     console.log('Parsed CSV Data:', results.data); // Log parsed data from CSV\r\n\r\n//                     // Handle import and update users list\r\n//                     handleImport(selectedFile).then(() => {\r\n//                         // Fetch updated users after import\r\n//                         axios.get('https://merncrudbackend-1zpv.onrender.com')\r\n//                             .then(response => {\r\n//                                 setUsers(response.data); // Update state with the latest users\r\n//                             })\r\n//                             .catch(err => {\r\n//                                 console.error('Error fetching updated user list:', err);\r\n//                             });\r\n//                     }).catch(error => {\r\n//                         console.error('Import error:', error);\r\n//                     });\r\n//                 },\r\n//                 error: function (error) {\r\n//                     console.error('Error parsing CSV:', error);\r\n//                 }\r\n//             });\r\n//         } else {\r\n//             console.error('No file selected for import');\r\n//             alert('Please select a file before importing.');\r\n//         }\r\n//     };\r\n\r\n\r\n//     return (\r\n//         <div className=\"d-flex vh-100 bg-primary justify-content-center align-items-center\">\r\n//             <div className=\"w-50 bg-white rounded p-3\">\r\n//                 <Link to=\"/create\" className=\"btn btn-success\">Add +</Link>\r\n//                 {/* Button for exporting CSV */}\r\n//                 <button className=\"btn btn-primary m-2\" onClick={handleExport}>Export CSV</button>\r\n//                 {/* Form for importing CSV */}\r\n//                 <div className=\"m-2\">\r\n//                     <input\r\n//                         type=\"file\"\r\n//                         id=\"csvFileInput\"\r\n//                         accept=\".csv\"\r\n//                         className=\"m-2\"\r\n//                         onChange={handleFileChange}\r\n//                     />\r\n//                     <button className=\"btn btn-warning\" onClick={handleFileUpload}>Import CSV</button>\r\n//                 </div>\r\n//                 {loading ? (\r\n//                     <div className=\"text-center\">\r\n//                         <div className=\"spinner-border\" role=\"status\">\r\n//                             <span className=\"visually-hidden\">Loading...</span>\r\n//                         </div>\r\n//                     </div>\r\n//                 ) : (\r\n//                     users.length > 0 ? (\r\n//                         <table className=\"table\">\r\n//                             <thead>\r\n//                                 <tr>\r\n//                                     <th>Name</th>\r\n//                                     <th>Email</th>\r\n//                                     <th>Age</th>\r\n//                                     <th style={{ textAlign: \"center\" }}>Action</th>\r\n//                                 </tr>\r\n//                             </thead>\r\n//                             <tbody>\r\n//                                 {users.map((user, index) => (\r\n//                                     <tr key={index}>\r\n//                                     {/* {console.log(\"user\",user)} */}\r\n//                                         <td>{user.name}</td>\r\n//                                         <td>{user.email}</td>\r\n//                                         <td>{user.age}</td>\r\n//                                         <td>\r\n//                                             <Link to={`/update/${user._id}`} className=\"btn btn-success m-2\">Update</Link>\r\n//                                             <button\r\n//                                                 className=\"btn btn-danger\"\r\n//                                                 onClick={() => handleDelete(user?._id)}>\r\n//                                                 Delete\r\n//                                             </button>\r\n//                                         </td>\r\n//                                     </tr>\r\n//                                 ))}\r\n//                             </tbody>\r\n//                         </table>\r\n//                     ) : (\r\n//                         <div className=\"text-center\">\r\n//                             <h3>No records found</h3>\r\n//                         </div>\r\n//                     )\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Users;\r\n\r\n\r\n\r\n// ###################################\r\n// TRY NEW CODE\r\n// ####################################\r\n\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Papa from 'papaparse';\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Users = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedFile, setSelectedFile] = useState(null); // State to hold the selected file\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios.get('https://merncrudbackend-1zpv.onrender.com')\r\n            .then(result => {\r\n                setUsers(result.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    const handleDelete = (id) => {\r\n        axios.delete(`https://merncrudbackend-1zpv.onrender.com/deleteUser/${id}`)\r\n            .then(res => {\r\n                // Update state after deletion\r\n                setUsers(prevUsers => prevUsers.filter(user => user._id !== id));\r\n                toast.success(\"User deleted successfully!\", {\r\n                    autoClose: 1000, // Set to 1000 ms (1 second)\r\n                    style: { color: '#F44336' }, // Text color red\r\n                    icon: () => <i style={{ color: '#F44336' }} className=\"fas fa-exclamation-circle\"></i>,\r\n                });\r\n            })\r\n            .catch(err => {\r\n                toast.error(\"Failed to delete user.\");\r\n                // console.error('Error deleting user:', err);\r\n            });\r\n    };\r\n\r\n    const handleExport = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/api/exportUsers', {\r\n                responseType: 'blob', // Important for downloading files\r\n            });\r\n\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', 'export.csv');\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            link.remove();\r\n            toast.success(\"Data exported successfully!\",{autoClose: 1000,});\r\n        } catch (error) {\r\n            toast.error(\"Failed to export data.\");\r\n            // console.error('Error exporting data', error);\r\n        }\r\n    };\r\n\r\n    const handleImport = async (file) => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:3001/api/importCsv', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Error importing CSV: ' + response.statusText);\r\n            }\r\n\r\n            const data = await response.text();\r\n            toast.success(\"Data imported successfully!\",{autoClose: 1000,});\r\n            // console.log('Import success:', data); // Log response for debugging\r\n            return data; // Return a success message or the data\r\n        } catch (error) {\r\n            toast.error(\"Failed to import data.\");\r\n            // console.error('Import error:', error.message);\r\n            throw error; // Re-throw for handling\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        setSelectedFile(file);\r\n        // console.log('File selected:', file);\r\n    };\r\n\r\n    const handleFileUpload = (event) => {\r\n        event.preventDefault();\r\n        if (selectedFile) {\r\n            Papa.parse(selectedFile, {\r\n                header: true,\r\n                complete: function (results) {\r\n                    // console.log('Parsed CSV Data:', results.data);\r\n\r\n                    // Handle import and update users list\r\n                    handleImport(selectedFile).then(() => {\r\n                        // Fetch updated users after import\r\n                        axios.get('https://merncrudbackend-1zpv.onrender.com')\r\n                            .then(response => {\r\n                                setUsers(response.data); // Update state with the latest users\r\n                            })\r\n                            .catch(err => {\r\n                                console.error('Error fetching updated user list:', err);\r\n                            });\r\n                    }).catch(error => {\r\n                        console.error('Import error:', error);\r\n                    });\r\n                },\r\n                error: function (error) {\r\n                    console.error('Error parsing CSV:', error);\r\n                }\r\n            });\r\n        } else {\r\n            console.error('No file selected for import');\r\n            alert('Please select a file before importing.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex vh-100 bg-primary justify-content-center align-items-center\">\r\n            <div className=\"w-50 bg-white rounded p-3\">\r\n                <Link to=\"/create\" className=\"btn btn-success\">Add +</Link>\r\n                <button className=\"btn btn-primary m-2\" onClick={handleExport}>Export CSV</button>\r\n                <div className=\"m-2\">\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"csvFileInput\"\r\n                        accept=\".csv\"\r\n                        className=\"m-2\"\r\n                        onChange={handleFileChange}\r\n                    />\r\n                    <button className=\"btn btn-warning\" onClick={handleFileUpload}>Import CSV</button>\r\n                </div>\r\n                {loading ? (\r\n                    <div className=\"text-center\">\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    users.length > 0 ? (\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Age</th>\r\n                                    <th style={{ textAlign: \"center\" }}>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users.map((user) => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.age}</td>\r\n                                        <td>\r\n                                            <Link to={`/update/${user._id}`} className=\"btn btn-success m-2\">Update</Link>\r\n                                            <button\r\n                                                className=\"btn btn-danger\"\r\n                                                onClick={() => handleDelete(user._id)}>\r\n                                                Delete\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    ) : (\r\n                        <div className=\"text-center\">\r\n                            <h3>No records found</h3>\r\n                        </div>\r\n                    )\r\n                )}\r\n            </div>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}